{"ast":null,"code":"// import { createStore } from \"redux\";\n// const counterReducer = (prevState = { counter: 0, isToggle:false}, action) => {\n//   if (action.type === \"INCREMENT\") {\n//     return {\n//       ...prevState,\n//       counter: prevState.counter + 1,\n//     };\n//   }\n//   if (action.type === \"DECREMENT\") {\n//     return {\n//       ...prevState,\n//       counter: prevState.counter - 1,\n//     };\n//   }\n//   if(action.type === 'TOGGLE'){\n//     return {\n//       isToggle: prevState.isToggle\n//     }\n//   }\n//   return prevState,\n//   }\n// const store = createStore(counterReducer)\n// export default store;\nimport { createStore } from \"redux\";\n\nconst counterReducer = function () {\n  let prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0,\n    isLoggedIn: false,\n    token: ''\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"INCREMENT\") {\n    return { ...prevState,\n      // {counter: 0, isLoggedIn: false }\n      counter: prevState.counter + 1,\n      isLoggedIn: true\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: prevState.counter - 1\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: prevState.counter - 1\n    };\n  }\n\n  return prevState;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","counterReducer","prevState","counter","isLoggedIn","token","action","type","store"],"sources":["/Users/user/Downloads/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createStore } from \"redux\";\n\n// const counterReducer = (prevState = { counter: 0, isToggle:false}, action) => {\n//   if (action.type === \"INCREMENT\") {\n//     return {\n//       ...prevState,\n//       counter: prevState.counter + 1,\n//     };\n//   }\n//   if (action.type === \"DECREMENT\") {\n//     return {\n//       ...prevState,\n//       counter: prevState.counter - 1,\n//     };\n//   }\n\n//   if(action.type === 'TOGGLE'){\n//     return {\n//       isToggle: prevState.isToggle\n//     }\n//   }\n//   return prevState,\n//   }\n\n// const store = createStore(counterReducer)\n// export default store;\n\n\nimport { createStore } from \"redux\";\n\nconst counterReducer = (prevState = { counter: 0, isLoggedIn: false, token: '' }, action) => {\n  if (action.type === \"INCREMENT\") {\n    return {\n      ...prevState, // {counter: 0, isLoggedIn: false }\n      counter: prevState.counter + 1,\n      isLoggedIn: true\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: prevState.counter - 1,\n    };\n  }\n\n  if (action.type === \"DECREMENT\") {\n    return {\n      counter: prevState.counter - 1,\n    };\n  }\n\n  return prevState;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,cAAc,GAAG,YAAsE;EAAA,IAArEC,SAAqE,uEAAzD;IAAEC,OAAO,EAAE,CAAX;IAAcC,UAAU,EAAE,KAA1B;IAAiCC,KAAK,EAAE;EAAxC,CAAyD;EAAA,IAAXC,MAAW;;EAC3F,IAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO,EACL,GAAGL,SADE;MACS;MACdC,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB,CAFxB;MAGLC,UAAU,EAAE;IAHP,CAAP;EAKD;;EAED,IAAIE,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLJ,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;IADxB,CAAP;EAGD;;EAED,IAAIG,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAO;MACLJ,OAAO,EAAED,SAAS,CAACC,OAAV,GAAoB;IADxB,CAAP;EAGD;;EAED,OAAOD,SAAP;AACD,CAtBD;;AAwBA,MAAMM,KAAK,GAAGR,WAAW,CAACC,cAAD,CAAzB;AAEA,eAAeO,KAAf"},"metadata":{},"sourceType":"module"}